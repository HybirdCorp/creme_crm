/*******************************************************************************
    Creme is a free/open-source Customer Relationship Management software
    Copyright (C) 2009-2025  Hybird

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*******************************************************************************/

(function($) {
"use strict";

creme.utils = creme.utils || {};

creme.utils.JSON = function() {};
creme.utils.JSON.prototype = {
/*
    encode: function(data) {
        console.warn('creme.utils.JSON.encode is deprecated; Use JSON.stringify instead.');
        return JSON.stringify(data);
    },
*/
/*
    isJSON: function(data) {
        console.warn('creme.utils.JSON.isJSON is deprecated; Use _.isJSON instead.');
        return _.isJSON(data);
    },
*/
/*
    decode: function(data, defaults) {
        if (defaults !== undefined) {
            try {
                return this.decode(data);
            } catch (e) {
                return defaults;
            }
        }

        console.warn('creme.utils.JSON.decode is deprecated; Use _.cleanJSON instead.');

        if (typeof data !== "string" || !data) {
            throw Error('Invalid data type or empty string');
        }

        return JSON.parse(data);
    }
*/
};

/*
creme.utils.JSON.clean = function(data, defaults) {
    console.warn('creme.utils.JSON.clean is deprecated; Use _.cleanJSON instead.');
    return _.isString(data) ? _.cleanJSON(data) || defaults : data;
};
*/

/*
creme.utils.JSON.readScriptText = function(element, options) {
    console.warn('creme.utils.JSON.readScriptText is deprecated; Use _.readJSONScriptText instead.');
    element = $(element).first();
    options = Object.assign({
        ignoreEmpty: false
    }, options || {});

    if (element.length === 0) {
        if (!options.ignoreEmpty) {
            console.warn('No such JSON script element');
        }

        return '';
    }

    return _.readJSONScriptText(element.get(0));
};
*/

}(jQuery));
